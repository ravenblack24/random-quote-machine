{"version":3,"sources":["index.js"],"names":["quotes","quote","author","color","Social","cta","faIcon","identifier","this","props","type","faTwitter","faTumblr","faQuestion","href","className","id","style","backgroundColor","icon","React","Component","Quote","faQuoteLeft","class","RandomQuoteGenerator","getRandomQuote","bind","state","quoteId","max","randomIndex","length","Math","floor","random","setState","document","body","Fragment","charSet","name","content","onClick","background","ReactDOM","render","getElementById"],"mappings":"8SAWMA,EAAS,CACd,CACCC,MAAO,oJACPC,OAAQ,eACRC,MAAO,WAER,CACCF,MAAO,oDACPC,OAAQ,QACRC,MAAO,WAER,CACCF,MAAO,yJACPC,OAAQ,kBACRC,MAAO,WAER,CACCF,MAAO,6GACPC,OAAQ,QACRC,MAAO,WAER,CACCF,MAAO,+EACPC,OAAQ,kBACRC,MAAO,WAEP,CACAF,MAAO,gHACPC,OAAQ,YACRC,MAAO,YAIHC,E,uKAGJ,IAAIC,EACAC,EACAC,EAEJ,OAAOC,KAAKC,MAAMC,MACjB,IAAK,UACJL,EAAM,yDAAyDG,KAAKC,MAAMR,MAAM,MAAMO,KAAKC,MAAMP,OACjGI,EAASK,IACTJ,EAAa,cACb,MAED,IAAK,SACJF,EAAM,oEAAoEG,KAAKC,MAAMP,OAAO,YAAYM,KAAKC,MAAMR,MACnHK,EAASM,IACTL,EAAa,eACb,MAED,QACCF,EAAM,IACNC,EAASO,IACTN,EAAa,gBAIf,OACC,uBAAGO,KAAMT,EAAKU,UAAU,eAAeC,GAAIT,EAAYU,MAAO,CAACC,gBAAiBV,KAAKC,MAAMN,QAC1F,kBAAC,IAAD,CAAiBgB,KAAMb,EAAQW,MAAO,CAACC,gBAAiBV,KAAKC,MAAMN,c,GA7BlDiB,IAAMC,WAmCrBC,E,uKAEJ,OACC,gCAAYP,UAAU,kBAAkBE,MAAO,CAACd,MAAOK,KAAKC,MAAMN,QACjE,uBAAGY,UAAU,QAAQC,GAAG,QACvB,kBAAC,IAAD,CAAiBG,KAAMI,IAAaR,UAAU,eAC7CP,KAAKC,MAAMR,OACb,4BAAQuB,MAAM,SAASR,GAAG,UAA1B,KACIR,KAAKC,MAAMP,a,GARCkB,IAAMC,WAepBI,E,kDACL,WAAYhB,GAAQ,IAAD,8BAClB,cAAMA,IACDiB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,MAAQ,CACZC,QAAS,GAJQ,E,gEASlBrB,KAAKkB,mB,uCAIL,IAsCoBI,EAtChBC,GAsCgBD,EAtCW9B,EAAOgC,OAuC9BC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMJ,KAtC9CtB,KAAK4B,SAAS,CACbP,QAASE,M,+BAKV,IAAM9B,EAAQD,EAAOQ,KAAKoB,MAAMC,SAAS5B,MACnCC,EAASF,EAAOQ,KAAKoB,MAAMC,SAAS3B,OACpCC,EAAQH,EAAOQ,KAAKoB,MAAMC,SAAS1B,MAGzC,OAFAkC,SAASC,KAAKrB,MAAMC,gBAAkBf,EAGrC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,IAAD,KACC,0BAAMC,QAAQ,UACd,mEACA,0BAAMC,KAAK,WAAWC,QAAQ,2DAE/B,6BAAS1B,GAAG,aACX,kBAACM,EAAD,CAAOrB,MAAOA,EAAOC,OAAQA,EAAQC,MAAOA,IAC3C,kBAACC,EAAD,CAAQM,KAAM,UAAWT,MAAOA,EAAOC,OAAQA,EAAQC,MAAOA,IAC9D,kBAACC,EAAD,CAAQM,KAAM,SAAUT,MAAOA,EAAOC,OAAQA,EAASC,MAAOA,IAC9D,4BAAQa,GAAG,YAAY2B,QAASnC,KAAKkB,eAAgBX,UAAU,eAAeE,MAAO,CAAC2B,WAAYzC,IAAlG,cAIF,kBAAC,IAAD,W,GAzC+BiB,IAAMC,WA+CzCwB,IAASC,OACN,kBAACrB,EAAD,MACAY,SAASU,eAAe,U","file":"static/js/main.34d659a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactFCCtest from 'react-fcctest';\r\nimport {Helmet} from \"react-helmet\";\r\nimport './index.css';\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faTumblr } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst quotes = [\r\n\t{ \r\n\t\tquote: \"Our species can only survive if we have obstacles to overcome. You remove those obstacles. Without them to strengthen us, we will weaken and die.\" ,\r\n\t\tauthor: \"Captain Kirk\",\r\n\t\tcolor: \"#B233FF\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"Change is the essential process of all existence.\" ,\r\n\t\tauthor: \"Spock\",\r\n\t\tcolor: \"#462255\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"With the first link, the chain is forged. The first speech censored, the first thought forbidden, the first freedom denied, chains us all irrevocably.\" ,\r\n\t\tauthor: \"Jean-Luc Picard\",\r\n\t\tcolor: \"#FF3380\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"You may find that having is not so pleasing a thing as wanting. This is not logical, but it is often true.\" ,\r\n\t\tauthor: \"Spock\",\r\n\t\tcolor: \"#FF4C33\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"Live now; make now always the most precious time. Now will never come again.\" ,\r\n\t\tauthor: \"Jean-Luc Picard\",\r\n\t\tcolor: \"#FFB233\"\r\n\t },\t \t\r\n\t { \r\n\t\tquote: \"Compassion: that's the one things no machine ever had. Maybe it's the one thing that keeps men ahead of them.\" ,\r\n\t\tauthor: \"Dr. McCoy\",\r\n\t\tcolor: \"#313B72\"\r\n\t },\t  \t \t \r\n];\r\n\r\nclass Social extends React.Component {\r\n\r\n\trender() {\r\n\t\tlet cta;\r\n\t\tlet faIcon;\r\n\t\tlet identifier;\r\n\r\n\t\tswitch(this.props.type) {\r\n\t\t\tcase \"Twitter\":\r\n\t\t\t\tcta = \"https://twitter.com/intent/tweet?hashtags=quotes&text=\"+this.props.quote+\" - \"+this.props.author;\r\n\t\t\t\tfaIcon = faTwitter;\r\n\t\t\t\tidentifier = \"tweet-quote\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"Tumblr\":\r\n\t\t\t\tcta = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&caption=\"+this.props.author+\"&content=\"+this.props.quote;\r\n\t\t\t\tfaIcon = faTumblr;\r\n\t\t\t\tidentifier = \"tumblr-quote\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tcta = \"#\";\r\n\t\t\t\tfaIcon = faQuestion;\r\n\t\t\t\tidentifier = \"unknown-quote\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<a href={cta} className=\"quote-social\" id={identifier} style={{backgroundColor: this.props.color}}>\r\n\t\t\t\t<FontAwesomeIcon icon={faIcon} style={{backgroundColor: this.props.color}}/>\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass Quote extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<blockquote className=\"quote-container\" style={{color: this.props.color}}>\r\n\t\t\t\t<p className=\"quote\" id=\"text\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faQuoteLeft} className=\"quote-icon\" />\r\n\t\t\t\t\t{this.props.quote}</p>\r\n\t\t\t\t<footer class=\"author\" id=\"author\">\r\n\t\t\t\t\t- {this.props.author}\r\n\t\t\t\t</footer>\r\n\t\t\t</blockquote>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass RandomQuoteGenerator extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.getRandomQuote = this.getRandomQuote.bind(this);\t\r\n\t\tthis.state = {\r\n\t\t\tquoteId: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getRandomQuote();\r\n\t}\r\n\r\n\tgetRandomQuote() {\r\n\t\tvar randomIndex = getRandomInt(quotes.length);\r\n\t\tthis.setState({\r\n\t\t\tquoteId: randomIndex\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst quote = quotes[this.state.quoteId].quote;\r\n\t\tconst author = quotes[this.state.quoteId].author;\r\n\t\tconst color = quotes[this.state.quoteId].color;\r\n\t\tdocument.body.style.backgroundColor = color;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta charSet=\"utf-8\" />\r\n\t\t\t\t\t<title>ReactJS - Random Quote Generator</title>\r\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<section id=\"quote-box\">\r\n\t\t\t\t\t<Quote quote={quote} author={author} color={color} />\r\n\t\t\t\t\t\t<Social type={\"Twitter\"} quote={quote} author={author} color={color} />\r\n\t\t\t\t\t\t<Social type={\"Tumblr\"} quote={quote} author={author}  color={color}/>\r\n\t\t\t\t\t\t<button id=\"new-quote\" onClick={this.getRandomQuote} className=\"quote-button\" style={{background: color}}>\r\n\t\t\t\t\t\t\tNew quote\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t</section>\r\n\t\t\t\t<ReactFCCtest />\t\r\n\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render(\r\n  \t<RandomQuoteGenerator />,\r\n  \tdocument.getElementById('root')\r\n);\r\n\r\nfunction getRandomInt(max) {\r\n  \treturn Math.floor(Math.random() * Math.floor(max));\r\n}"],"sourceRoot":""}