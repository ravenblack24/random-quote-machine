{"version":3,"sources":["index.js"],"names":["quotes","quote","author","colors","Social","cta","faIcon","identifier","this","props","type","faTwitter","faTumblr","faQuestion","href","id","style","background","color","className","icon","React","Component","Quote","Fragment","faQuoteLeft","RandomQuoteGenerator","getRandomQuote","bind","state","max","randomIndex","length","Math","floor","random","document","body","backgroundColor","setState","charSet","name","content","onClick","ReactDOM","render","getElementById"],"mappings":"8SAWMA,EAAS,CACd,CACCC,MAAO,oJACLC,OAAQ,gBAEX,CACCD,MAAO,oDACLC,OAAQ,SAEX,CACCD,MAAO,yJACLC,OAAQ,mBAEX,CACCD,MAAO,6GACLC,OAAQ,SAEX,CACCD,MAAO,+EACLC,OAAQ,oBAINC,EAAS,CACb,UACA,UACA,UACA,UACA,UACA,WAGIC,E,uKAGJ,IAAIC,EACAC,EACAC,EAEJ,OAAOC,KAAKC,MAAMC,MACjB,IAAK,UACJL,EAAM,yDAAyDG,KAAKC,MAAMR,MAAM,MAAMO,KAAKC,MAAMP,OACjGI,EAASK,IACTJ,EAAa,cACb,MAED,IAAK,SACJF,EAAM,oEAAoEG,KAAKC,MAAMP,OAAO,YAAYM,KAAKC,MAAMR,MACnHK,EAASM,IACTL,EAAa,eACb,MAED,QACCF,EAAM,IACNC,EAASO,IACTN,EAAa,gBAIf,OACC,uBAAGO,KAAMT,EAAKU,GAAIR,EAAYS,MAAO,CAACC,WAAYT,KAAKC,MAAMS,OAAQC,UAAU,mBAC9E,kBAAC,IAAD,CAAiBC,KAAMd,EAAQa,UAAW,oB,GA7BzBE,IAAMC,WAmCrBC,E,uKAEJ,OACC,kBAAC,IAAMC,SAAP,KACC,yBAAKT,GAAG,QAAO,0BAAMI,UAAU,QAAQH,MAAO,CAACE,MAAOV,KAAKC,MAAMS,QAAQ,kBAAC,IAAD,CAAiBE,KAAMK,MAAjF,IAAkGjB,KAAKC,MAAMR,QAC5H,yBAAKc,GAAG,SAASC,MAAO,CAACE,MAAOV,KAAKC,MAAMS,QAA3C,KAAsDV,KAAKC,MAAMP,a,GALjDmB,IAAMC,WAWpBI,E,kDACL,WAAYjB,GAAQ,IAAD,8BAClB,cAAMA,IACDkB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,MAAQ,CACZ5B,MAAO,GACPC,OAAQ,GACRgB,MAAO,IANU,E,gEAWlBV,KAAKmB,mB,uCAIL,IA2CoBG,EA3ChBC,GA2CgBD,EA3CW9B,EAAOgC,OA4C9BC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMJ,KA3CxCZ,EAAQf,EAAO4B,GACrBK,SAASC,KAAKrB,MAAMsB,gBAAkBpB,EAEtCV,KAAK+B,SAAS,CACbtC,MAAOD,EAAO+B,GAAa9B,MAC3BC,OAAQF,EAAO+B,GAAa7B,OAC5BgB,Y,+BAKD,OACC,kBAAC,IAAMM,SAAP,KACM,kBAAC,IAAD,KACI,0BAAMgB,QAAQ,UACd,mEACA,0BAAMC,KAAK,WAAWC,QAAQ,2DAExC,yBAAK3B,GAAG,YAAYI,UAAU,mBAC7B,kBAACI,EAAD,CAAOtB,MAAOO,KAAKqB,MAAM5B,MAAOC,OAAQM,KAAKqB,MAAM3B,OAAQgB,MAAOV,KAAKqB,MAAMX,QAC7E,yBAAKH,GAAG,aACP,yBAAKA,GAAG,UACP,6BAAK,kBAACX,EAAD,CAAQM,KAAM,UAAWT,MAAOO,KAAKqB,MAAM5B,MAAOC,OAAQM,KAAKqB,MAAM3B,OAAQgB,MAAOV,KAAKqB,MAAMX,SACpG,6BAAK,kBAACd,EAAD,CAAQM,KAAM,SAAUT,MAAOO,KAAKqB,MAAM5B,MAAOC,OAAQM,KAAKqB,MAAM3B,OAAQgB,MAAOV,KAAKqB,MAAMX,UAEpG,yBAAKH,GAAG,OACP,6BAAK,4BAAQA,GAAG,YAAY4B,QAASnC,KAAKmB,eAAgBX,MAAO,CAACC,WAAYT,KAAKqB,MAAMX,OAASC,UAAU,mBAAvG,gBAGP,kBAAC,IAAD,Y,GA9C+BE,IAAMC,WAsDzCsB,IAASC,OACN,kBAACnB,EAAD,MACAU,SAASU,eAAe,U","file":"static/js/main.7d957ac2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactFCCtest from 'react-fcctest';\nimport {Helmet} from \"react-helmet\";\nimport './index.css';\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faTumblr } from \"@fortawesome/free-brands-svg-icons\";\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst quotes = [\n\t{ \n\t\tquote: \"Our species can only survive if we have obstacles to overcome. You remove those obstacles. Without them to strengthen us, we will weaken and die.\" ,\n\t  \tauthor: \"Captain Kirk\",\n\t },\n\t{ \n\t\tquote: \"Change is the essential process of all existence.\" ,\n\t  \tauthor: \"Spock\",\n\t },\n\t{ \n\t\tquote: \"With the first link, the chain is forged. The first speech censored, the first thought forbidden, the first freedom denied, chains us all irrevocably.\" ,\n\t  \tauthor: \"Jean-Luc Picard\",\n\t },\n\t{ \n\t\tquote: \"You may find that having is not so pleasing a thing as wanting. This is not logical, but it is often true.\" ,\n\t  \tauthor: \"Spock\",\n\t },\n\t{ \n\t\tquote: \"Live now; make now always the most precious time. Now will never come again.\" ,\n\t  \tauthor: \"Jean-Luc Picard\",\n\t },\t \t \t \t \n];\n\nconst colors = [\n\t\t\"#B233FF\",\n\t\t\"#FF33E6\",\n\t\t\"#FF3380\",\n\t\t\"#FF4C33\",\n\t\t\"#FFB233\",\n\t\t\"#E6FF33\"\n]\n\nclass Social extends React.Component {\n\n\trender() {\n\t\tlet cta;\n\t\tlet faIcon;\n\t\tlet identifier;\n\n\t\tswitch(this.props.type) {\n\t\t\tcase \"Twitter\":\n\t\t\t\tcta = \"https://twitter.com/intent/tweet?hashtags=quotes&text=\"+this.props.quote+\" - \"+this.props.author;\n\t\t\t\tfaIcon = faTwitter;\n\t\t\t\tidentifier = \"tweet-quote\";\n\t\t\t\tbreak;\n\n\t\t\tcase \"Tumblr\":\n\t\t\t\tcta = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&caption=\"+this.props.author+\"&content=\"+this.props.quote;\n\t\t\t\tfaIcon = faTumblr;\n\t\t\t\tidentifier = \"tumblr-quote\";\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tcta = \"#\";\n\t\t\t\tfaIcon = faQuestion;\n\t\t\t\tidentifier = \"unknown-quote\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn (\n\t\t\t<a href={cta} id={identifier} style={{background: this.props.color}} className=\"border-radius-5\">\n\t\t\t\t<FontAwesomeIcon icon={faIcon} className =\"icon-style\" />\n\t\t\t</a>\n\t\t);\n\t}\n}\n\nclass Quote extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div id=\"text\"><span className=\"quote\" style={{color: this.props.color}}><FontAwesomeIcon icon={faQuoteLeft} /> {this.props.quote}</span></div>\n\t\t\t\t<div id=\"author\" style={{color: this.props.color}}>- {this.props.author}</div>\n\t\t\t</React.Fragment>\n\t\t\t);\n\t}\n}\n\nclass RandomQuoteGenerator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.getRandomQuote = this.getRandomQuote.bind(this);\t\n\t\tthis.state = {\n\t\t\tquote: \"\",\n\t\t\tauthor: \"\",\n\t\t\tcolor: \"\"\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getRandomQuote();\n\t}\n\n\tgetRandomQuote() {\n\t\tvar randomIndex = getRandomInt(quotes.length);\n\t\tconst color = colors[randomIndex];\n\t\tdocument.body.style.backgroundColor = color;\n\n\t\tthis.setState({\n\t\t\tquote: quotes[randomIndex].quote,\n\t\t\tauthor: quotes[randomIndex].author,\n\t\t\tcolor\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n        \t<Helmet>\n            \t<meta charSet=\"utf-8\" />\n            \t<title>ReactJS - Random Quote Generator</title>\n            \t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\n        \t</Helmet>\n\t\t\t<div id=\"quote-box\" className=\"border-radius-5\">\n\t\t\t\t<Quote quote={this.state.quote} author={this.state.author} color={this.state.color} />\n\t\t\t\t<div id=\"buttonRow\">\n\t\t\t\t\t<div id=\"social\">\n\t\t\t\t\t\t<div><Social type={\"Twitter\"} quote={this.state.quote} author={this.state.author} color={this.state.color} /></div>\n\t\t\t\t\t\t<div><Social type={\"Tumblr\"} quote={this.state.quote} author={this.state.author} color={this.state.color} /></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"new\">\n\t\t\t\t\t\t<div><button id=\"new-quote\" onClick={this.getRandomQuote} style={{background: this.state.color}}  className=\"border-radius-5\">New quote</button></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ReactFCCtest />\n\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t\t);\n\t}\n\n}\n\nReactDOM.render(\n  \t<RandomQuoteGenerator />,\n  \tdocument.getElementById('root')\n);\n\nfunction getRandomInt(max) {\n  \treturn Math.floor(Math.random() * Math.floor(max));\n}\n"],"sourceRoot":""}