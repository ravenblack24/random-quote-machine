{"version":3,"sources":["components/Social.js","components/Quote.js","components/RandomQuoteGenerator.js","helpers/getRandomInt.js","index.js"],"names":["Social","cta","faIcon","identifier","this","props","type","quote","author","faTwitter","faTumblr","faQuestion","href","className","id","style","backgroundColor","color","icon","React","Component","Quote","faQuoteLeft","quotes","RandomQuoteGenerator","getRandomQuote","bind","state","quoteId","max","randomIndex","length","Math","floor","random","setState","document","body","Fragment","Helmet","charSet","name","content","loading","width","height","src","alt","data-recalc-dims","onClick","background","ReactDOM","render","getElementById"],"mappings":"8SAMqBA,E,uKAGnB,IAAIC,EACAC,EACAC,EAEJ,OAAOC,KAAKC,MAAMC,MACjB,IAAK,UACJL,EAAM,yDAAyDG,KAAKC,MAAME,MAAM,MAAMH,KAAKC,MAAMG,OACjGN,EAASO,IACTN,EAAa,cACb,MAED,IAAK,SACJF,EAAM,oEAAoEG,KAAKC,MAAMG,OAAO,YAAYJ,KAAKC,MAAME,MACnHL,EAASQ,IACTP,EAAa,eACb,MAED,QACCF,EAAM,IACNC,EAASS,IACTR,EAAa,gBAIf,OACC,uBAAGS,KAAMX,EAAKY,UAAU,eAAeC,GAAIX,EAAYY,MAAO,CAACC,gBAAiBZ,KAAKC,MAAMY,QAC1F,kBAAC,IAAD,CAAiBC,KAAMhB,EAAQa,MAAO,CAACC,gBAAiBZ,KAAKC,MAAMY,c,GA7BnCE,IAAMC,WCFrBC,E,uKAEnB,OACC,gCAAYR,UAAU,kBAAkBE,MAAO,CAACE,MAAOb,KAAKC,MAAMY,QACjE,uBAAGJ,UAAU,QAAQC,GAAG,QACvB,kBAAC,IAAD,CAAiBI,KAAMI,IAAaT,UAAU,eAC7CT,KAAKC,MAAME,OACb,4BAAQM,UAAU,SAASC,GAAG,UAA9B,KACIV,KAAKC,MAAMG,a,GARgBW,IAAMC,WCGnCG,G,MAAS,CACd,CACChB,MAAO,oJACPC,OAAQ,eACRS,MAAO,WAER,CACCV,MAAO,oDACPC,OAAQ,QACRS,MAAO,WAER,CACCV,MAAO,yJACPC,OAAQ,kBACRS,MAAO,WAER,CACCV,MAAO,6GACPC,OAAQ,QACRS,MAAO,WAER,CACCV,MAAO,+EACPC,OAAQ,kBACRS,MAAO,WAEP,CACAV,MAAO,+GACPC,OAAQ,YACRS,MAAO,aAIYO,E,kDACpB,WAAYnB,GAAQ,IAAD,8BAClB,cAAMA,IACDoB,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,MAAQ,CACZC,QAAS,GAJQ,E,gEASlBxB,KAAKqB,mB,uCAIL,ICtDmCI,EDsD/BC,GCtD+BD,EDsDJN,EAAOQ,OCrD7BC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMJ,KDsD/CzB,KAAK+B,SAAS,CACbP,QAASE,M,+BAKV,IAAMvB,EAAQgB,EAAOnB,KAAKuB,MAAMC,SAASrB,MACnCC,EAASe,EAAOnB,KAAKuB,MAAMC,SAASpB,OACpCS,EAAQM,EAAOnB,KAAKuB,MAAMC,SAASX,MAGzC,OAFAmB,SAASC,KAAKtB,MAAMC,gBAAkBC,EAGrC,kBAAC,IAAMqB,SAAP,KACC,kBAACC,EAAA,EAAD,KACC,0BAAMC,QAAQ,UACd,wEACA,0BAAMC,KAAK,WAAWC,QAAQ,2DAE/B,uBAAG9B,KAAK,wDAAuD,yBAAK+B,QAAQ,OAAOC,MAAM,MAAMC,OAAO,MAAMC,IAAI,kGAAkGjC,UAAU,4BAA4BkC,IAAI,oBAAoBC,mBAAiB,OACjS,6BAASlC,GAAG,aACX,kBAAC,EAAD,CAAOP,MAAOA,EAAOC,OAAQA,EAAQS,MAAOA,IAC3C,kBAAC,EAAD,CAAQX,KAAM,UAAWC,MAAOA,EAAOC,OAAQA,EAAQS,MAAOA,IAC9D,kBAAC,EAAD,CAAQX,KAAM,SAAUC,MAAOA,EAAOC,OAAQA,EAASS,MAAOA,IAC9D,4BAAQH,GAAG,YAAYmC,QAAS7C,KAAKqB,eAAgBZ,UAAU,eAAeE,MAAO,CAACmC,WAAYjC,IAAlG,mB,GAtC4CE,IAAMC,WEpCxD+B,IAASC,OACN,kBAAC,EAAD,MACAhB,SAASiB,eAAe,W","file":"static/js/main.78978a41.chunk.js","sourcesContent":["import React from 'react';\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faTumblr } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default class Social extends React.Component {\r\n\r\n\trender() {\r\n\t\tlet cta;\r\n\t\tlet faIcon;\r\n\t\tlet identifier;\r\n\r\n\t\tswitch(this.props.type) {\r\n\t\t\tcase \"Twitter\":\r\n\t\t\t\tcta = \"https://twitter.com/intent/tweet?hashtags=quotes&text=\"+this.props.quote+\" - \"+this.props.author;\r\n\t\t\t\tfaIcon = faTwitter;\r\n\t\t\t\tidentifier = \"tweet-quote\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"Tumblr\":\r\n\t\t\t\tcta = \"https://www.tumblr.com/widgets/share/tool?posttype=quote&caption=\"+this.props.author+\"&content=\"+this.props.quote;\r\n\t\t\t\tfaIcon = faTumblr;\r\n\t\t\t\tidentifier = \"tumblr-quote\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tcta = \"#\";\r\n\t\t\t\tfaIcon = faQuestion;\r\n\t\t\t\tidentifier = \"unknown-quote\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<a href={cta} className=\"quote-social\" id={identifier} style={{backgroundColor: this.props.color}}>\r\n\t\t\t\t<FontAwesomeIcon icon={faIcon} style={{backgroundColor: this.props.color}}/>\r\n\t\t\t</a>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport { faQuoteLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default class Quote extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<blockquote className=\"quote-container\" style={{color: this.props.color}}>\r\n\t\t\t\t<p className=\"quote\" id=\"text\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faQuoteLeft} className=\"quote-icon\" />\r\n\t\t\t\t\t{this.props.quote}</p>\r\n\t\t\t\t<footer className=\"author\" id=\"author\">\r\n\t\t\t\t\t- {this.props.author}\r\n\t\t\t\t</footer>\r\n\t\t\t</blockquote>\r\n\t\t);\r\n\t}\r\n}","import React from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport getRandomInt from '../helpers/getRandomInt';\r\nimport Social from './Social';\r\nimport Quote from './Quote';\r\nimport '../index.css';\r\n\r\nconst quotes = [\r\n\t{ \r\n\t\tquote: \"Our species can only survive if we have obstacles to overcome. You remove those obstacles. Without them to strengthen us, we will weaken and die.\" ,\r\n\t\tauthor: \"Captain Kirk\",\r\n\t\tcolor: \"#B233FF\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"Change is the essential process of all existence.\" ,\r\n\t\tauthor: \"Spock\",\r\n\t\tcolor: \"#462255\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"With the first link, the chain is forged. The first speech censored, the first thought forbidden, the first freedom denied, chains us all irrevocably.\" ,\r\n\t\tauthor: \"Jean-Luc Picard\",\r\n\t\tcolor: \"#FF3380\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"You may find that having is not so pleasing a thing as wanting. This is not logical, but it is often true.\" ,\r\n\t\tauthor: \"Spock\",\r\n\t\tcolor: \"#FF4C33\"\r\n\t },\r\n\t{ \r\n\t\tquote: \"Live now; make now always the most precious time. Now will never come again.\" ,\r\n\t\tauthor: \"Jean-Luc Picard\",\r\n\t\tcolor: \"#FFB233\"\r\n\t },\t \t\r\n\t { \r\n\t\tquote: \"Compassion: that's the one thing no machine ever had. Maybe it's the one thing that keeps men ahead of them.\" ,\r\n\t\tauthor: \"Dr. McCoy\",\r\n\t\tcolor: \"#313B72\"\r\n\t },\t  \t \t \r\n];\r\n\r\nexport default class RandomQuoteGenerator extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.getRandomQuote = this.getRandomQuote.bind(this);\t\r\n\t\tthis.state = {\r\n\t\t\tquoteId: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getRandomQuote();\r\n\t}\r\n\r\n\tgetRandomQuote() {\r\n\t\tvar randomIndex = getRandomInt(quotes.length);\r\n\t\tthis.setState({\r\n\t\t\tquoteId: randomIndex\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst quote = quotes[this.state.quoteId].quote;\r\n\t\tconst author = quotes[this.state.quoteId].author;\r\n\t\tconst color = quotes[this.state.quoteId].color;\r\n\t\tdocument.body.style.backgroundColor = color;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<meta charSet=\"utf-8\" />\r\n\t\t\t\t\t<title>Random Quote Generator - React.js app</title>\r\n\t\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n\t\t\t\t</Helmet>\r\n\t\t\t\t<a href=\"https://github.com/ravenblack24/random-quote-machine\"><img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_left_darkblue_121621.png?resize=149%2C149\" className=\"attachment-full size-full\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" /></a>\r\n\t\t\t\t<section id=\"quote-box\">\r\n\t\t\t\t\t<Quote quote={quote} author={author} color={color} />\r\n\t\t\t\t\t\t<Social type={\"Twitter\"} quote={quote} author={author} color={color} />\r\n\t\t\t\t\t\t<Social type={\"Tumblr\"} quote={quote} author={author}  color={color}/>\r\n\t\t\t\t\t\t<button id=\"new-quote\" onClick={this.getRandomQuote} className=\"quote-button\" style={{background: color}}>\r\n\t\t\t\t\t\t\tNew quote\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t</section>\r\n\t\t\t</React.Fragment>\r\n\t\t\t);\r\n\t}\r\n}","export default function getRandomInt(max) {\r\n    return Math.floor(Math.random() * Math.floor(max));\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RandomQuoteGenerator from './components/RandomQuoteGenerator';\n\nReactDOM.render(\n  \t<RandomQuoteGenerator />,\n  \tdocument.getElementById('root')\n);"],"sourceRoot":""}